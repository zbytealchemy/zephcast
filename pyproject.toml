[tool.poetry]
name = "zephcast"
version = "1.0.0"
description = "A messaging library supporting multiple backends"
authors = ["Zbigniew Mastylo <z.mastylo@protonmail.com>"]
readme = "README.md"
packages = [{include = "zephcast", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"

# Core dependencies (always installed)
typing-extensions = "^4.8.0"

# Sync backend dependencies
kafka-python = {version = "^2.0.2", optional = true}
pika = {version = "^1.3.2", optional = true}
redis = {version = "^5.0.1", optional = true}

# Async backend dependencies
aiokafka = {version = "^0.10.0", optional = true}
aio-pika = {version = "^9.3.1", optional = true}
aioredis = {version = "^2.0.1", optional = true}

[tool.poetry.extras]
# Sync groupings
sync = ["kafka-python", "pika", "redis"]
sync-kafka = ["kafka-python"]
sync-rabbit = ["pika"]
sync-redis = ["redis"]

# Async groupings
async = ["aiokafka", "aio-pika", "aioredis"]
async-kafka = ["aiokafka"]
async-rabbit = ["aio-pika"]
async-redis = ["aioredis"]

# Individual broker full support
kafka = ["kafka-python", "aiokafka"]
rabbit = ["pika", "aio-pika"]
redis = ["redis", "aioredis"]

# Complete installation
all = ["kafka-python", "pika", "redis", "aiokafka", "aio-pika", "aioredis"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pre-commit = "^4.0.1"
ruff = "^0.1.8"
mypy = "^1.7.0"
types-setuptools = "*"
types-redis = "*"  # Added this line
radon = "^6.0.1"
pytest-mypy-plugins = "^3.0.0"
pytest-timeout = "^2.2.0"
mkdocs = "^1.5.0"
mkdocs-material = "^9.4.0"
mkdocs-autorefs = "^0.5.0"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}
pytest-cov = "^6.0.0"
fakeredis = "^2.20.0"

[tool.poetry.group.docs.dependencies]
mkdocs-bootstrap = "^1.1.1"
pymdown-extensions = "^10.14"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
# All broker dependencies for testing
kafka-python = "^2.0.2"
pika = "^1.3.2"
redis = "^5.0.1"
aiokafka = "^0.10.0"
aio-pika = "^9.3.1"
aioredis = "^2.0.1"
fakeredis = "^2.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
markers = [
    "timeout: mark test to timeout after given seconds"
]
addopts = "--cov=zephcast --cov-report=term-missing"
norecursedirs = ["src/zephcast/examples/*"]

[tool.coverage.run]
source = ["src/zephcast"]
omit = [
    "src/zephcast/examples/*",
    "src/zephcast/testing/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
line-length = 110
target-version = "py39"  
select = [
    "E",   
    "F",   
    "I",   
    "N",   
    "W",   
    "B",   
    "C4",  
    "UP",  
    "RUF", 
    "TCH", 
    "TID", 
]
ignore = []

[tool.ruff.isort]
known-first-party = ["zephcast"]
combine-as-imports = true
force-single-line = false
lines-between-types = 1

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true
explicit_package_bases = true
plugins = []
mypy_path = "src"

[[tool.mypy.overrides]]
module = ["redis.*", "redis"]
ignore_missing_imports = true
