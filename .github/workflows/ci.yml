name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
    
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --with test --no-interaction
    
    - name: Run linting
      run: poetry run make lint
    
    - name: Run type checking
      run: poetry run make type-check
    
    - name: Run tests
      run: poetry run make test

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
    
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction

    - name: Set RELEASE_FLAG
      run: echo "RELEASE_FLAG=${{ vars.RELEASE_FLAG }}" >> $GITHUB_ENV

    - name: Get version from pyproject.toml
      if: ${{ env.RELEASE_FLAG == 'true' }}
      run: |
        echo "VERSION=$(poetry version -s)" >> $GITHUB_ENV

    - name: Create and push tag
      if: ${{ env.RELEASE_FLAG == 'true' }}
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git tag -a "v${VERSION}" -m "Release v${VERSION}"
        git push origin "v${VERSION}"
    
    - name: Build and publish
      if: ${{ env.RELEASE_FLAG == 'true' }}
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry build
        poetry publish
